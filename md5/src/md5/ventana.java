/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package md5;

import com.sun.webkit.ThemeClient;
import java.io.*;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;

/**
 *
 * @author AKU
 */



public class ventana extends javax.swing.JFrame {

    /**
     * Creates new form ventana
     */ int lineas=0;
         String[ ] nombres = new String[100];
         String[ ] pass = new String[100];
         String[] passcrack = new String [100];
         int conhilos=0;
         int inom=0,ipass=0,icrack=0;
         hilo a = new hilo();
         crack b = new crack();
         int cp=0;
   
     @SuppressWarnings("empty-statement")
         public ventana() {
     
                 
        initComponents();
        String lkj = "012345";
        System.out.println(lkj.charAt(2));
        
      char [] cadena = new char[8]; 
      cadena[0]='0';
      cadena[1]='1';
      cadena[2]='2';
      cadena[3]='3';
      cadena[4]='4';
      cadena[5]='5';
      cadena[6]=' ';
      cadena[7]=' ';
         System.out.println(cadena);
         System.out.println(lkj);
         
         char PPP='t';
        if(PPP==116){
            System.out.println("AAAASSSSSCCCCCCIIIIIIIII");
        }
         
         System.out.println("hhasta aqui");
       
       
        System.out.println("hola");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        procesar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        entra = new javax.swing.JTextField();
        sali = new javax.swing.JTextField();
        segundos = new javax.swing.JLabel();
        hl = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextPane();
        orden = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        procesar.setText("Procesar");
        procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesarActionPerformed(evt);
            }
        });

        jLabel1.setText("Direccion de entrada");

        jLabel2.setText("Direccion de salida");

        entra.setText("C:\\archivo.txt");

        sali.setText("C:\\salida.txt");

        segundos.setText("0");

        hl.setText("1");

        jLabel3.setText("Hilos a usar");

        jScrollPane1.setViewportView(texto);

        orden.setText("Ordenar");
        orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenActionPerformed(evt);
            }
        });

        jLabel4.setText("Presione presionar y luego ordenar cuando se le indique");

        jLabel5.setText("o para detener el proceso e imprimir igualmente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel3)
                        .addGap(63, 63, 63)
                        .addComponent(hl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 119, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(sali)
                                .addComponent(entra, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(segundos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(procesar)
                        .addGap(48, 48, 48)
                        .addComponent(orden))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(entra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(sali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(hl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(procesar)
                    .addComponent(orden)
                    .addComponent(segundos, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesarActionPerformed
        // TODO add your handling code here:
       StringTokenizer token;
       int i ;
        
        String g = entra.getText();
        System.out.println(g);
        conhilos = Integer.parseInt(hl.getText());
      
        
        try {
            BufferedReader bf = new BufferedReader(new FileReader(g));
            String temp = " ";
            String read;
            
            while((read= bf.readLine())!=null){
            System.out.println(read);
            token = new StringTokenizer(read,"::");
            nombres[lineas]= token.nextToken();
            pass[lineas]= token.nextToken();
            lineas++;
            }
        
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       // for(i=0;i<lineas;i++){
           // System.out.println(pass[i]);
       // }
        
        
       
        cp=lineas;
        a.start();
        b.start();  //aqui inicio
        
       
       
    }//GEN-LAST:event_procesarActionPerformed

    private void ordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenActionPerformed
        // TODO add your handling code here:
        File archivo=new File(sali.getText());
        FileWriter escribir;
        int i; 
        
        a.stop();
        b.stop();
       
        try {
            escribir = new FileWriter(archivo,true);
            
           
            for(i=0;i<lineas;i++){
                escribir.write(nombres[i]+"      "+passcrack[i]+"\r\n");   //7777777
                texto.setText(nombres[i]+passcrack[i]+"\r\n");
              
            }
            
            
            escribir.close();
            
            texto.setText(" ");
               for(i=0;i<lineas;i++){
               String g = texto.getText();
               texto.setText(g + "\n"+nombres[i]+"  "+passcrack[i]);
               }
            
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ordenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventana().setVisible(true);
                try {
                    //          TestEncriptarMD5 a;
                    //          a = new TestEncriptarMD5();
                    System.out.println("\n\nEncriptacion en MD5 de aaa: '"+md5("aaa")+"'");
                } catch (Exception ex) {
                    Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    System.out.println("Encriptacion en MD5 de mariai: '"+md5("CoFFee")+"'");
                } catch (Exception ex) {
                    Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField entra;
    private javax.swing.JTextField hl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton orden;
    private javax.swing.JButton procesar;
    private javax.swing.JTextField sali;
    private javax.swing.JLabel segundos;
    private javax.swing.JTextPane texto;
    // End of variables declaration//GEN-END:variables

    
    
    
private class hilo extends Thread{
int contador=0;
    
    public void run(){
    while(true){
    segundos.setText(Integer.toString(contador)+" s");
    contador++;
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    }

}

private static String md5(String clear) throws Exception {
MessageDigest md = MessageDigest.getInstance("MD5");
byte[] b = md.digest(clear.getBytes());

int size = b.length;
StringBuffer h = new StringBuffer(size);
for (int i = 0; i < size; i++) {
int u = b[i] & 255;
if (u < 16) {
h.append("0" + Integer.toHexString(u));
} else {
h.append(Integer.toHexString(u));
}
}
return h.toString();
}



       // String[ ] nombres = new String[100];
       //  String[ ] pass = new String[100];
       //  String[] passcrack = new String [100];

private class crack extends Thread{

    int posm=97,posM=97-32,u=0,j=0;
    
    public void mayusculas(char []pala) throws Exception{
     int ca=0,i;
  
 
     for(i=0;i<4;i++){
     if(pala[i]!=' '){
     ca++;
     }
     }
    
      i=0;
        char []drap = new char[4];
        drap[0]=' ';
        drap[1]=' ';
         drap[2]=' ';
          drap[3]=' ';
        
        if(ca==1){       //una sola en minuscula
            char aux;   
            drap[0]=pala[0];
            aux= drap[0];   //numero
            aux-=97;
            aux+=65;
            drap[0]= aux;  
         if (validar(drap))return;
        } else
        
        
        if(ca==2){
           // System.out.println("hasta aqui");
           // Thread.sleep(10000);
            
        drap[0]=pala[0];
        drap[1]=pala[1];
        
        drap[0]-=97;  drap[0]+=65;       //Aa
        if(validar(drap)==true)return;  drap[0]+=32;
        
        drap[1]-=97;  drap[1]+=65;       //aA
        if(validar(drap)==true)return;  drap[1]+=32;
        
        drap[1]-=97; drap[1]+=65;
        drap[0]-=97; drap[0]+=65;
        if(validar(drap)==true) return;
        
        }else
            
          if(ca==3){
              drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];
              
              for(i=0;i<3;i++){
              drap[i]-=32;
              if(validar(drap))return;
              }
              
              for(i=0;i<3;i++){
              drap[i]+=32;
              if(validar(drap))return;
              
              drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];  //original
              
              drap[1]-=32;                   //aAa
              if (validar(drap))return;
              
              drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];   //original
              }
              
              drap[0]-=32;               //AaA
              drap[2]-=32;
              if(validar(drap))return;
          } //fin 3
    
        
          else if(ca==4){
              drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];
              drap[3]=pala[3];
              
              for(i=0;i<4;i++){
              drap[i]-=32;
              if(validar(drap))return;
              }
              
              for(i=0;i<4;i++){
              drap[i]+=32;
              if(validar(drap))return;
              }
              
              drap[1]-=32;             //aAaa
               if(validar(drap))return;
               
              drap[0]-=32; drap[1]+=32; drap[2]-=32; drap[3]-=32;   //AaAA
               if(validar(drap))return;
               
          drap[0]+=32;  drap[2]+=32;  drap[3]+=32;  //todo a lo menor  aaa
          
          drap[2]-=32;      
           if(validar(drap))return;
           
          drap[0]-=32; drap[1]-=32; drap[2]+=32; drap[3]-=32; 
          if(validar(drap))return;
          
           drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];
              drap[3]=pala[3];
              
              drap[0]-=32;
               if(validar(drap))return;
               
                drap[3]-=32;
               if(validar(drap))return;
               
                drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];
              drap[3]=pala[3];
              
              drap[1]-=32;
              drap[2]-=32;
              if(validar(drap))return;
              
                 drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];
              drap[3]=pala[3];
              
              drap[0]-=32;
              drap[2]-=32;
              if(validar(drap))return;
              
                 drap[0]=pala[0];
              drap[1]=pala[1];
              drap[2]=pala[2];
              drap[3]=pala[3];
              
              drap[1]-=32;
              drap[3]-=32;
              if(validar(drap))return;
              
          } //fin 4
    }
    

    private void recursividad(char []aku,int pos,int carac,int mayus) throws Exception{
      
     if(pos>3 || posm>122){
         return;
     }
      int i;  
         
     char []aux=new char[4];
        for(i=0;i<4;i++){
        if(i<pos){aux[i]=aku[i];}else{aux[i]=' '; }
        }
        aux[pos]=(char)carac;
       
        mayusculas(aux);
        if(validar(aux)){ return;} 
        
       // System.out.println(aux);
        
  int j;
  
  // System.out.println("posi: "+pos);
 // pos++;       
             
  for(j=97;j<123;j++){        
            recursividad(aux,pos+1,j,posM);  
         }
        
    }
    
    private Boolean validar(char []cadena) throws Exception{
      
        int i,y,co=0; 
        String lol;
     
         for(y=0;y<4;y++){
         if(cadena[y]!=' '){
         co++; 
       // System.out.println(y);
         }
           
         }  
             
         char[]aku = new char [co];
         for(y=0;y<co;y++)
         {
         aku[y]=cadena[y];   
         } 
        System.out.println(aku); 
         lol = md5(String.valueOf(aku));
       //  System.out.println(lol);
         
          if(cp==0) {
           String g = texto.getText();
           texto.setText(g + "\n"+ "Todo se crackeo presione el boton de ordenar"); 
         a.stop();
           b.stop();
       }
         
         for(i=0;i<lineas;i++){
         if(lol.equals(pass[i])){
             System.out.println(nombres[i]+"  "+String.valueOf(aku));
             passcrack[i]=String.valueOf(aku);
             String g = texto.getText();
             texto.setText(g + "\n"+nombres[i]+"  "+passcrack[i]+" crack en "+segundos.getText()+" segundos");
             System.out.println("oggggggh crack");
            // Thread.sleep(5000);
             cp--;
             return true;
         }//else{System.out.println("no es"+i);}
         }
                
return false;
    }
   
    
    private void test (String clave) throws Exception{
        char l1,l2,l3,l4,l5,l6;
        int i,j,k;
        
         char []drap = new char[4];
    drap[0]=' ';
     drap[1]=' ';
      drap[2]=' ';
       drap[3]=' ';
     
       // System.out.println(drap);
       
        int pos=0; 
        for(i=97;i<123;i++){
        
            drap[pos]=(char) i;   // a-z  primera latra
            //System.out.println(drap);
            
            validar(drap); 
            mayusculas(drap);
            
            for(j=97;j<123;j++){ 
            recursividad(drap,pos+1,j,posM);  
         }    
        }//minisculas
        
   //  beta//   for(i=65;i<91;i++){
       // drap[pos]= (char)i;
           // System.out.println(drap);
       //     validar(drap);
          //  for(j=65;j<91;j++){
         //   recursividadd(drap,pos+1,j,posM);
       //     }
        //}
        
    }  
        
        
        
      
    
public void run(){
      
         String g;
    try {
        g = md5("aaa");
        System.out.println(pass[2]);
    //    if(g.equals(pass[0])){
    //        System.out.println("acceso");
    //  }
        int i1,i2,i3,i4,i5,i6,cou=lineas;
        char l1=97;
        
        test(pass[0]);
        do{
       
 
        
         }while(cou>0);
        
        
    } catch (Exception ex) {
        Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
 
}
}






